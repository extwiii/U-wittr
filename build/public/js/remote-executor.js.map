{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","public/js/remote-executor/index.js"],"names":[],"mappingsmBC7SgB,KAAK;;;;AAErB,SAAS,MAAM,CAAC,IAAI,EAAE;AACpB,MAAI,UAAU,GAAG,GAAG,CAAC;AACrB,MAAI,OAAO,GAAG,CAAC,CAAC;;AAEhB,SAAO,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,OAAO,GAAG;AAC/C,WAAO,iBAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,UAAA,SAAS,EAAI;AAC1C,eAAS,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;KAC/B,CAAC,SAAM,CAAC,UAAA,GAAG,EAAI;AACd,UAAI,OAAO,IAAI,UAAU,EAAE,MAAM,GAAG,CAAC;AACrC,aAAO,EAAE,CAAC;AACV,aAAO,OAAO,EAAE,CAAC;KAClB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;;;;;AAMD,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAA,KAAK,EAAI;;AAExC,MAAI,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE,OAAO;;AAEhE,MAAI,OAAO,CAAC,UAAA,OAAO,EAAI;AACrB,WAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GAChC,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM,EAAI;AAChB,SAAK,CAAC,MAAM,CAAC,WAAW,CAAC;AACvB,QAAE,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;AACjB,YAAM,EAAN,MAAM;KACP,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;GAClB,CAAC,SAAM,CAAC,UAAA,KAAK,EAAI;AAChB,SAAK,CAAC,MAAM,CAAC,WAAW,CAAC;AACvB,QAAE,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;AACjB,WAAK,EAAE,KAAK,CAAC,OAAO;KACrB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;GAClB,CAAC,CAAC;CACJ,CAAC,CAAC;;AAGH,IAAI,CAAC,UAAU,GAAG,UAAA,GAAG,EAAI;AACvB,SAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACtC,QAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAChD,UAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAA,CAAC;aAAI,OAAO,CAAC,MAAM,CAAC;KAAA,CAAC,CAAC;AACtD,UAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,CAAC;aAAI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;KAAA,CAAC,CAAC;AACtE,UAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACjB,YAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;GACnC,CAAC,CAAC;CACJ,CAAC","file":"remote-executor.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n  \n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var request = (this._store || this._index)[funcName].apply(this._store, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());","import idb from 'idb';\n\nfunction openDb(name) {\n  var maxVersion = 100;\n  var version = 1;\n\n  return Promise.resolve().then(function tryOpen() {\n    return idb.open(name, version, upgradeDb => {\n      upgradeDb.transaction.abort();\n    }).catch(err => {\n      if (version >= maxVersion) throw err;\n      version++;\n      return tryOpen();\n    });\n  });\n}\n\n// This lets the settings server execute code in the \n// context of the app server.\n// This is so the settings server can confirm tasks\n// have been completed sucessfully\nself.addEventListener('message', event => {\n  // Bail if it's not this host talking\n  if (new URL(event.origin).hostname != location.hostname) return;\n\n  new Promise(resolve => {\n    resolve(eval(event.data.eval));\n  }).then(result => {\n    event.source.postMessage({\n      id: event.data.id,\n      result\n    }, event.origin);\n  }).catch(error => {\n    event.source.postMessage({\n      id: event.data.id,\n      error: error.message\n    }, event.origin);\n  });\n});\n\n\nself.openIframe = url => {\n  return new Promise((resolve, reject) => {\n    const iframe = document.createElement('iframe');\n    iframe.addEventListener('load', _ => resolve(iframe));\n    iframe.addEventListener('error', _ => reject(Error(\"iframe failed\")));\n    iframe.src = url;\n    document.body.appendChild(iframe);\n  });\n};"]}